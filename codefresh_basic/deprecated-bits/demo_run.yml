# This is the main pipeline workflow used to run the demo.

version: '1.0'
stages:
  - prepare
  - deploy
  - cleanup
steps:
  cloneRepo:
    stage: prepare
    title: Cloning main repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: github
  ### was running into resource issues in Codefresh's free tier and so collapsed this step into the deployStack step.
  ### Keeping for historical purposes and in case we go with a paid tier.
  # setupPulumi:
  #   stage: prepare
  #   title: Prepare Pulumi
  #   image: pulumi/pulumi
  #   working_directory: ${{CF_VOLUME_PATH}}/pulumi_env
  #   commands:
  #     - rm -rf * # clean up any old stuff
  #     - export PULUMI_PROJECT=cf-`echo $CF_PIPELINE_NAME | cut -d"/" -f1`
  #     - export PULUMI_STACK=`echo $CF_PIPELINE_NAME | cut -d"/" -f2`
  #     - export PULUMI_FULLSTACK=$PULUMI_ORG/$PULUMI_PROJECT/$PULUMI_STACK
  #     - cf_export PULUMI_FULLSTACK # used in later steps
  #     - pulumi new aws-typescript -g -f -y -n $PULUMI_PROJECT -d $PULUMI_PROJECT
  #     - mv ../${{CF_REPO_NAME}}/* . # overwrite the files initialized by the pulumi new with the git-cloned files.
  #     - npm install
  deployStack:
    stage: deploy
    title: Deploy Stack
    fail_fast: false
    image: pulumi/pulumi
    #working_directory: ${{setupPulumi}} ## example of referencing working directory specified in different step
    working_directory: ${{CF_VOLUME_PATH}}/pulumi_env
    commands:
      - rm -rf * # clean up any old stuff
      - export PULUMI_PROJECT=cf-`echo $CF_PIPELINE_NAME | cut -d"/" -f1`
      - export PULUMI_STACK=`echo $CF_PIPELINE_NAME | cut -d"/" -f2`
      - export PULUMI_FULLSTACK=$PULUMI_ORG/$PULUMI_PROJECT/$PULUMI_STACK
      - cf_export PULUMI_FULLSTACK # used in later steps
      - pulumi new aws-typescript -g -f -y -n $PULUMI_PROJECT -d $PULUMI_PROJECT
      - mv ../${{CF_REPO_NAME}}/* . # overwrite the files initialized by the pulumi new with the git-cloned files.
      - npm install
      - pulumi stack select $PULUMI_FULLSTACK --create # use or create a stack
      - pulumi config set aws:region us-east-1
      - pulumi up --skip-preview --non-interactive --yes # --debug --logtostderr -v 9
  askToCleanup:
    type: pending-approval
    stage: cleanup
    title: Clean up environment?
    fail_fast: true
    timeout: # force an approval to clean up after duration hours.
      duration: 1
      finalState: approved
  destroyPulumiStack:
    stage: cleanup
    title: Destroy Stack
    fail_fast: false
    image: pulumi/pulumi
    commands: # need to recreate stuff since using pending-approval type and not enabling "build remains active" policy for the account or pipeline
      - export PULUMI_PROJECT=cf-`echo $CF_PIPELINE_NAME | cut -d"/" -f1`
      - export PULUMI_STACK=`echo $CF_PIPELINE_NAME | cut -d"/" -f2`
      - export PULUMI_FULLSTACK=$PULUMI_ORG/$PULUMI_PROJECT/$PULUMI_STACK
      - pulumi new aws-typescript -g -f -y -n $PULUMI_PROJECT -d $PULUMI_PROJECT
      - pulumi stack select $PULUMI_FULLSTACK --create
      - pulumi destroy -s $PULUMI_FULLSTACK -y --skip-preview
      - pulumi stack rm $PULUMI_FULLSTACK -y
